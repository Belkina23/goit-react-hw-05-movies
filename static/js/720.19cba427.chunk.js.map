{"version":3,"file":"static/js/720.19cba427.chunk.js","mappings":"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","sources":["services/apiFilms.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass API {\n  constructor() {\n    this.baseUrl = 'https://api.themoviedb.org/3';\n    this.apiKey = 'api_key=9cca312caffd11f4ae9f11244d585025';\n  }\n\n  getTrending = async period => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/trending/movie/${period}?${this.apiKey}`\n      );\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  searchMovie = async query => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/search/movie?${this.apiKey}&query=${query}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieById = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieCredits = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/credits?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieReviews = async movieId => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/reviews?${this.apiKey}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}\n\nconst MovieAPI = new API();\n\nexport default MovieAPI;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst ListMovies = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  width: 1460px;\n  justify-content: center;\n  padding: 0;\n`;\n\nconst ListItemMovie = styled.li`\n  border: 1px solid black;\n  overflow: hidden;\n  border-radius: 5%;\n  text-align: center;\n`;\n\nconst PosterMovie = styled.img`\n  display: block;\n  width: 300px;\n  min-height: 450px;\n`;\n\nconst TitleMovie = styled.p`\n  margin: 0;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  font-weight: 600;\n`;\nconst LinkDiv = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n`;\n\nexport { ListMovies, ListItemMovie, PosterMovie, TitleMovie, LinkDiv };\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  ListMovies,\n  ListItemMovie,\n  PosterMovie,\n  TitleMovie,\n  LinkDiv,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ListMovies>\n        {movies.map(({ poster_path, id, title }) => (\n          <ListItemMovie key={id}>\n            <LinkDiv to={`/movies/${id}`} state={{ from: location }}>\n              <PosterMovie src={poster_path} alt={title} />\n              <TitleMovie>{title}</TitleMovie>\n            </LinkDiv>\n          </ListItemMovie>\n        ))}\n      </ListMovies>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.any.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nconst Container = styled.div `\n    width: 1460px;\n    margin: 20px auto;\n    text-align: center;\n`\n\nexport {Container};","import { useState, useEffect } from 'react';\nimport MovieAPI from '../../services/apiFilms';\nimport MovieList from 'components/MovieList';\nimport holder from '../../images/holder.png';\nimport { Container } from './Home.styled';\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n\n\n    useEffect(() => {\n\t\tMovieAPI.getTrending('week').then(movies => {\n\t\t\tconst info = movies.reduce((acc, movie) => {\n\t\t\t\tconst poster = movie.poster_path\n\t\t\t\t\t? `https://image.tmdb.org/t/p/original/${movie.poster_path}`\n\t\t\t\t\t: holder;\n\t\t\t\tconst film = {\n\t\t\t\t\tid: movie.id,\n\t\t\t\t\ttitle: movie.title,\n\t\t\t\t\trelease_date: movie.release_date,\n\t\t\t\t\tposter_path: poster,\n\t\t\t\t\tvote_average: movie.vote_average,\n\t\t\t\t};\n\t\t\t\treturn [...acc, film];\n\t\t\t}, []);\n\n\t\t\tsetMovies(info);\n\t\t});\n\t}, []);\n\n\tif (!movies) return;\n\n\nreturn (\n<main>\n\t<Container>\n    <h1>Trending today</h1>\n    <MovieList movies={movies} />\n\t</Container>\n</main>\n)\n}\n\nexport default Home;"],"names":["API","getTrending","period","axios","baseUrl","apiKey","results","data","console","log","message","searchMovie","query","getMovieById","movieId","getMovieCredits","getMovieReviews","this","ListMovies","styled","ListItemMovie","PosterMovie","TitleMovie","LinkDiv","NavLink","movies","location","useLocation","map","poster_path","id","title","to","state","from","src","alt","Container","useState","setMovies","useEffect","MovieAPI","then","info","reduce","acc","movie","poster","holder","film","release_date","vote_average"],"sourceRoot":""}